<!DOCTYPE HTML>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href='http://fonts.googleapis.com/css?family=Open+Sans:400' rel='stylesheet' type='text/css'>

    <link rel="icon" src="/img/yr.png" type="image/png" sizes="16x16">
    <title>Korean Ferry</title>

    <style type="text/css">
      .navbar {
        z-index: 20;
      }
      h2 {
        padding: 5px;
        padding-bottom: 0px;
      }
      p {
        padding-top: 0px; 
        /*padding-bottom: 22px;*/
        text-align: center;
/*        padding-left: 12%;
        padding-right: 12%;*/
        font-family: sans-serif;
        font-size: 12px; line-height: 110%;
        font-weight: 300;
        letter-spacing: 1px;
        /*color: rgb(100,100,100);*/
        position: relative; margin: 0px;
      }
      .bgrey {
        padding-left: 7%;
        padding-right: 7%;
        /*padding-top:36px; */
        /*padding-bottom:36px;*/
        background-color: black;
        color: white;
        font-weight: 100 !important;
        margin: 0px;
        font-size: 15px; line-height: 140%;
        letter-spacing: 1px;
      }
    </style>

    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="/css/bootstrap.css">
    <script src="/js/bootstrap.min.js"></script>

    <script language="Javascript" type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>

  </head>


  <body>
    <div class="navbar">
      <div class="navbar-inner">
        <a class="brand" href="/">KOREAN FERRY</a>
        <ul class="nav">
          <li><a href="/time">TIMELINE</a></li>
          <li><a href="/viz">NEWS RATINGS</a></li>
        </ul>
      </div>
    </div>

    <script src="processing.js" type="text/javascript"></script>
  
  <h2 style="text-align:center; font-size: 18px;">Changes in audience ratings of the major news programs</h2>
  
  <p>
    <span style="color:rgb(248,101,98)">KBS</span>, 
    <span style="color:rgb(249,170,104)">SBS</span>, 
    <span style="color:rgb(180,180,180)">MBC</span>: National Networks
  </p>
  <p style="padding-bottom:30px;">
    <span style="color:rgb(24,127,228)">JTBC</span>, 
    <span style="color:rgb(80,258,85)">MBN</span>: Cable Networks 
  </p>
  
  
  <canvas id="myCanvas"></canvas>

<!--    <p class="bgrey" style="padding-top:36px;">
      This visualization shows the changes in audience ratings of the major news programs in Korean broadcasting media after the ferry disaster. It covers data in week days from April 1, to May 30th. The following explains the structure of Korean broadcasting media:
   </p>
   <div class="bgrey" style="padding-bottom:36px;">
      <ul >
        <li>National Terrestrial Channels (KBS1, KBS2, MBC, SBS)</li>
        <li>Comprehensive PP (JTBC, MBN, TV Chosun, Channel A)</li>
        <li>Cable Networks</li>
      </ul>
  <div> -->
   


<script type="text/processing" data-processing-target="myCanvas">
    kbs mykbs = new kbs();
jtbc myjtbc = new jtbc();
mbc mymbc = new mbc();
sbs mysbs = new sbs();
mbn mymbn = new mbn();

void setup() {
  //  size(640, 360);
  // size(1420, 595);
  size(1420, 520);
}

void draw() {
  background(255);
  smooth();

  guidline();
  myjtbc.render();
  mykbs.render();
  mymbc.render();
  mysbs.render();
  mymbn.render();

  //  stroke(197);
  stroke(0);
  line(width*0.1, height*0.9, width*0.9, height*0.9);
}

void guidline() {
  stroke(239);
  fill(239);
  rectMode(CORNER);
  float wide = width*0.8*7.7/59;
  rect(width*0.1, height*0.1, width*0.1+wide, height*0.8);
  //  rect(width/2, height/2, width*0.8, height*0.8); 

  float dy = height*(0.9 - 0.1) /6;
  for (int i = 0; i < 6; i++) {
    dashedline(width*0.1, height*0.1 + i*dy, width*0.9, height*0.1 + i*dy);

    fill(140);
    textSize(10);
    text(6-i, width*0.9 + 4, height*0.1 + i*dy + 3);
  }
  text("0 (%)", width*0.9 + 4, height*0.9 + 3);
}

void dashedline(float x1, float y1, float x2, float y2) {
  int gap = 250;
  for (int i = 0; i < gap; i++) {
    float x = map(i, 0, gap-1, x1, x2);
    float y = map(i, 0, gap-1, y1, y2);
    stroke(170);
    point(x, y);
  }
}

class jtbc {
  
  float[] jtbcView = {
    0.412,0.375,0.474,0.228,0.221,0.272,0.427,0.113,0.169,0.531,0.42,0.548,0.994,1.418,1.683,1.869,1.415,1.741,1.326,2.038,2.011,1.822,2.042,1.611,1.575,1.604,1.295,1.118,0.928,1.064,1.216,0.996,1.067,0.95,1.59,1.344,1.31,1.172,0.892,1.395,1.397,1.01,1.112,0.89
  };
  
  String[] days = {
    "4/1","4/2","4/3","4/4","4/7","4/8","4/9","4/10","4/11","4/14","4/15","4/16","4/17","4/18","4/21",
    "4/22","4/23","4/24","4/25","4/28","4/29","4/30","5/1","5/2","5/5","5/6","5/7","5/8","5/9",
    "5/12","5/13","5/14","5/15","5/16","5/19","5/20","5/21","5/22","5/23","5/26","5/27","5/28","5/29","5/30"
  };
  
  String[] sdays = {
    "4/16"
  };
  
  String[] events = {
    "Chief anchor at JTBC apologizes for ferry victim interview"
  };
  
  jtbc() {
  }
  
  void update() {
  }
  
  void render() {
    smooth();
    rectMode(CENTER);
    float len = jtbcView.length;
    float maxd = width*0.8/(len+60);
    
    noFill();
    beginShape();
    for(int i = 0; i < len; i++) {
      float x = map(i, 0, len-1, width*0.1, width*0.9);
      float y = map(jtbcView[i], 0, 6, height*0.9, height*0.1);
      
      if(i==0) {
        fill(24,127,228);
        textSize(12);
        textAlign(RIGHT);
        text("JTBC",x-4,y);
        noFill();
        textAlign(LEFT);
      }
      
      if(i % 1 == 0) {
        fill(0);
        textSize(8);
        text(days[i], x, height*0.925);
        noFill();
        
        stroke(0);
        line(x, height*0.9, x, height*0.9-5);
      }
      
      String current = days[i];
      
      // guideline
      float d = abs(mouseX - x);
      if(d < maxd) {
        //stroke(160, 200);
        stroke(0);
        strokeWeight(1);
        line(x, height*0.1, x, height*0.9);
        
        textSize(11);
        fill(0);
        text(jtbcView[i] + "%", x + 4,y-2);
        noFill();
        
        fill(24,127,228);
        noStroke();
        ellipse(x, y, 4, 4);
        noFill();
        
        fill(0);
        textSize(12);
        if(current.equals("4/16")) {
          rectMode(CORNER);
          noStroke();
          // rect(x, height*0.18, 335, 20); 
          rect(x, height*0.177, 335, 20); 
          fill(255);
          text("Chief anchor's at JTBC apologizes for ferry victim interview", x+ 4, height*0.2); 
        }
        noFill();
      }
      
      vertex(x, y);
      stroke(24,127,228); //blue
      strokeWeight(1.3);
      
      if(current.equals("4/16")){
        strokeWeight(3);
        ellipse(x, y, 10, 10);
        strokeWeight(1.3);
      }
    }
    endShape();
  }
  
}
class kbs {
  
  float[] kbsView = {
    5.989,4.453,4.701,3.118,4.38,4.841,4.421,4.647,3.392,4.727,5.014,4.782,4.154,4.073,4.915,4.526,5.074,4.193,3.918,3.821,4.518,3.767,4.034,4.659,5.022,5.745,4.02,3.583,2.812,3.877,4.137,3.354,3.634,3.235,3.981,4.313,4.087,3.944,3.185,4.368,4.093,3.347,3.594,3.197
  };
  
  String[] days = {
    "4/1","4/2","4/3","4/4","4/7","4/8","4/9","4/10","4/11","4/14","4/15","4/16","4/17","4/18","4/21",
    "4/22","4/23","4/24","4/25","4/28","4/29","4/30","5/1","5/2","5/5","5/6","5/7","5/8","5/9",
    "5/12","5/13","5/14","5/15","5/16","5/19","5/20","5/21","5/22","5/23","5/26","5/27","5/28","5/29","5/30"
  };
  
  String[] sdays = {
    "5/9", "5/19", "5/30"
  };
  
  String[] events = {
    "Newsroom head resigned", "Staff strike as chief reguses to quit", "KBS workers launch strike over meddling"
  };
  
  kbs() {
  }
  
  void update() {
  }
  
  void render() {
    smooth();
    
    float len = kbsView.length;
    float maxd = width*0.8/(len+60);
    
    noFill();
    beginShape();
    for(int i = 0; i < len; i++) {
      
      float x = map(i, 0, len-1, width*0.1, width*0.9);
      float y = map(kbsView[i], 0, 6, height*0.9, height*0.1);
      
      if(i==0) {
        fill(248,101,98);
        textSize(12);
        textAlign(RIGHT);
        text("KBS",x-4,y+15);
        noFill();
        textAlign(LEFT);
      }
      
      String current = days[i];
      
      float d = abs(mouseX - x);
      if(d < maxd) {  
        textSize(11);
        fill(0);
        text(kbsView[i] + "%", x + 4,y-2);
        noFill();
        
        fill(248,101,98);
        noStroke();
        ellipse(x, y, 4, 4);
        noFill();
        
        fill(0);
        textSize(12);
        
        if(current.equals("5/9")) {
          rectMode(CORNER);
          noStroke();
          // rect(x, height*0.18, 185, 20); 
          rect(x, height*0.177, 185, 20); 
          fill(255);
        
          //text("KBS Newsroom head resigned over a conversational comment on the victims", width*0.1+ 20, height*0.58);
          text("KBS Newsroom head resigned", x+ 4, height*0.2); 
        }else if(current.equals("5/19")) {
          rectMode(CORNER);
          noStroke();
          // rect(x, height*0.18, 245, 20); 
          rect(x, height*0.177, 245, 20); 
          fill(255);
          
//          text("KBS staff strike as a chief refuses to quit", width*0.1+ 20, height*0.58);
          text("KBS staff strike as a chief refuses to quit", x+ 4, height*0.2);
        }else if(current.equals("5/30")) {
          rectMode(CORNER);
          noStroke();
          // rect(x, height*0.18, -250, 20); 
          rect(x, height*0.177, -250, 20); 
          fill(255);
          
          textAlign(RIGHT);
//          text("KBS workers launch strike over meddling", width*0.1+ 20, height*0.58);
          text("KBS workers launch strike over meddling", x- 4, height*0.2);
        }else if(current.equals("5/8")) {
          rectMode(CORNER);
          noStroke();
          // rect(x, height*0.18, 275, 20); 
          rect(x, height*0.177, 275, 20); 
          fill(255);
          
//          text("KBS Sewol report was staged, reporters admit", width*0.1+ 20, height*0.58);
          text("KBS Sewol report was staged, reporters admit", x+ 4, height*0.2);
        }

        noFill();
        stroke(200);
        strokeWeight(3);
        if(current.equals("4/17")) {
          ellipse(x,height*0.1,10,10);
          if(mousePressed) { link("http://processingjs.org", "_new");  }
        } else if(current.equals("4/22")) {
          ellipse(x,height*0.1,10,10);
          if(mousePressed) { link("http://processingjs.org", "_new");  }
        } else if(current.equals("4/28")) {
          ellipse(x,height*0.1,10,10);
          if(mousePressed) { link("http://processingjs.org", "_new");  }
        } else if(current.equals("5/6")) {
          ellipse(x,height*0.1,10,10);
          if(mousePressed) { link("http://processingjs.org", "_new");  }
        } else if(current.equals("5/15")) {
          ellipse(x,height*0.1,10,10);
          if(mousePressed) { link("http://processingjs.org", "_new");  }
        } else if(current.equals("5/19")) {
          ellipse(x,height*0.1,10,10);
          if(mousePressed) { link("http://processingjs.org", "_new");  }
        }

        //noFill();
        textAlign(LEFT);


      }
      
      vertex(x, y);
      stroke(248,101,98); // red
      strokeWeight(1.3);
      
      if(current.equals("5/8")||current.equals("5/9")||current.equals("5/19")||current.equals("5/30")) {
        strokeWeight(3);
        ellipse(x, y, 10, 10);
        strokeWeight(1.3);
      }
      
      // government issues
      textSize(12);
      fill(0);
      if(current.equals("5/19")) {
          
        strokeWeight(1);
        stroke(10);
        line(x, height*0.11, x, height*0.075);
        text("Disband coast guard", x+2, height*0.09-2);
      }else if(current.equals("5/15")) {
        strokeWeight(1);
        stroke(10);
        line(x, height*0.11, x, height*0.04);
        text("Ferry captain charged with manslaughter", x+2, height*0.09-27);
      }else if(current.equals("4/28")) {
        strokeWeight(1);
        stroke(10);
        line(x, height*0.11,  x, height*0.075);
        text("Prime minister resigns", x+2, height*0.09-2);
//        text("Videos capturing ferry's final moments", x+2, height*0.09+22);
      }else if(current.equals("4/22")) {
        strokeWeight(1);
        stroke(10);
        line(x, height*0.11,  x, height*0.04);
        text("School field trips canceled", x+2, height*0.09-27);
      }else if(current.equals("4/16")) {
        strokeWeight(2);
        stroke(10);
        textAlign(RIGHT);
//        textSize(17);
        fill(120);
        line(x, height*0.11,  x, height*0.07);
        text("Korean Ferry Disaster", x-6, height*0.09-2);
        textAlign(LEFT);
      }else if(current.equals("5/6")) {
        strokeWeight(1);
        stroke(10);
        line(x, height*0.11,  x, height*0.075);
        text("Civilian diver dies in search", x+2, height*0.09-2);        
      }else if(current.equals("4/17")) {
        strokeWeight(1);
        stroke(10);
        line(x, height*0.11,  x, height*0.04);
        textAlign(RIGHT);
        text("A message from students on ferry", x-4, height*0.09-27);  
        textAlign(LEFT);    
      }
      noFill();
  
    }
    endShape();
  }
  
}
class mbc {
  
  float[] mbcView = {
    1.612,2.487,2.097,1.646,1.824,2.432,2.507,1.902,2.713,1.791,2.254,2.736,2.802,2.486,2.477,1.969,1.581,1.534,1.873,1.598,1.746,1.303,1.788,1.812,2.676,2.424,1.361,1.173,1.109,1.43,1.272,1.463,1.257,0.955,1.521,1.249,1.686,1.543,1.097,1.458,0.918,2.103,0.549,1.201
  };
  
  String[] days = {
    "4/1","4/2","4/3","4/4","4/7","4/8","4/9","4/10","4/11","4/14","4/15","4/16","4/17","4/18","4/21",
    "4/22","4/23","4/24","4/25","4/28","4/29","4/30","5/1","5/2","5/5","5/6","5/7","5/8","5/9",
    "5/12","5/13","5/14","5/15","5/16","5/19","5/20","5/21","5/22","5/23","5/26","5/27","5/28","5/29","5/30"
  };
  
  mbc() {
  }
  
  void update() {
  }
  
  void render() {
    smooth();
    
    float len = mbcView.length;
    float maxd = width*0.8/(len+60);
    
    noFill();
    beginShape();
    for(int i = 0; i < len; i++) {
      float x = map(i, 0, len-1, width*0.1, width*0.9);
      float y = map(mbcView[i], 0, 6, height*0.9, height*0.1);
      
      if(i==0) {
        fill(140);
        textSize(12);
        textAlign(RIGHT);
        text("MBC",x-4,y+10);
        noFill();
        textAlign(LEFT);
      }
      
      String current = days[i];
      
      float d = abs(mouseX - x);
      if(d < maxd) {  
        textSize(11);
        fill(0);
//        text(mbcView[i] + "%", x + 4,y-2);
        noFill();
        
        fill(180);
        noStroke();
        ellipse(x, y, 4, 4);
        noFill();
      }
      
      vertex(x, y);
//      stroke(248,101,98); // red
      stroke(180, 210); 
      strokeWeight(0.8);
  
    }
    endShape();
  }
  
}
class mbn {
  
  float[] mbnView = {
    0.084,0.136,0.09,0.087,0.147,0.081,0.158,0.279,0.072,0.154,0.107,0.119,0.238,0.313,0.156,0.148,0.223,0.144,0.142,0.13,0.131,0.123,0.31,0.344,0.326,0.309,0.363,0.278,0.145,0.307,0.225,0.232,0.202,0.211,0.224,0.289,0.259,0.25,0.141,0.264,0.242,0.175,0.286,0.191
  };
  
  String[] days = {
    "4/1","4/2","4/3","4/4","4/7","4/8","4/9","4/10","4/11","4/14","4/15","4/16","4/17","4/18","4/21",
    "4/22","4/23","4/24","4/25","4/28","4/29","4/30","5/1","5/2","5/5","5/6","5/7","5/8","5/9",
    "5/12","5/13","5/14","5/15","5/16","5/19","5/20","5/21","5/22","5/23","5/26","5/27","5/28","5/29","5/30"
  };
  
  mbn() {
  }
  
  void update() {
  }
  
  void render() {
    smooth();
    
    float len = mbnView.length;
    float maxd = width*0.8/(len+60);
    
    noFill();
    beginShape();
    for(int i = 0; i < len; i++) {
      float x = map(i, 0, len-1, width*0.1, width*0.9);
      float y = map(mbnView[i], 0, 6, height*0.9, height*0.1);
      
      if(i==0) {
        // fill(249,170,104);
        fill(80,258,85);
        textSize(12);
        textAlign(RIGHT);
        text("MBN",x-4,y+0);
        noFill();
        textAlign(LEFT);
      }
      
      String current = days[i];
      
      float d = abs(mouseX - x);
      if(d < maxd) {  
        // fill(249,170,104);
        fill(80,258,85);
        noStroke();
        ellipse(x, y, 4, 4);
        noFill();
      }
      
      vertex(x, y);
//      stroke(248,101,98); // red
      // stroke(249,170,104,230); 
      stroke(80,258,85);
      strokeWeight(0.8);
    }
    endShape();
  }
  
}
class sbs {
  
  float[] sbsView = {
    1.775,1.726,1.365,1.889,1.783,2.608,1.45,1.905,1.618,1.665,1.809,1.192,2.106,2.07,1.326,1.345,1.599,0.999,1.103,1.397,1.369,1.053,1.097,1.71,1.447,1.907,1.051,1.264,0.992,1.265,1.199,0.831,1.044,1.064,1.252,0.99,1.339,0.823,1.02,1.003,0.97,0.572,0.92,0.937
  };
  
  String[] days = {
    "4/1","4/2","4/3","4/4","4/7","4/8","4/9","4/10","4/11","4/14","4/15","4/16","4/17","4/18","4/21",
    "4/22","4/23","4/24","4/25","4/28","4/29","4/30","5/1","5/2","5/5","5/6","5/7","5/8","5/9",
    "5/12","5/13","5/14","5/15","5/16","5/19","5/20","5/21","5/22","5/23","5/26","5/27","5/28","5/29","5/30"
  };
  
  sbs() {
  }
  
  void update() {
  }
  
  void render() {
    smooth();
    
    float len = sbsView.length;
    float maxd = width*0.8/(len+60);
    
    noFill();
    beginShape();
    for(int i = 0; i < len; i++) {
      float x = map(i, 0, len-1, width*0.1, width*0.9);
      float y = map(sbsView[i], 0, 6, height*0.9, height*0.1);
      
      if(i==0) {
        // fill(80,258,85); 
        fill(249,170,104);
        textSize(12);
        textAlign(RIGHT);
        text("SBS",x-4,y+0);
        noFill();
        textAlign(LEFT);
      }
      
      String current = days[i];
      
      float d = abs(mouseX - x);
      if(d < maxd) {  
        textSize(11);
        fill(0);
//        text(sbsView[i] + "%", x + 4,y-2);
        noFill();
        
        // fill(80,258,85);
        fill(249,170,104);
        noStroke();
        ellipse(x, y, 4, 4);
        noFill();
      }
      
      vertex(x, y);
//      stroke(248,101,98); // red
      // stroke(80,258,85,200); 
      stroke(249,170,104,220);
      strokeWeight(0.8);
    }
    endShape();
  }
  
}

// void mousePressed() { 

//   link("http://processingjs.org", "_new"); 

// }
</script>

  </body>
</html>
